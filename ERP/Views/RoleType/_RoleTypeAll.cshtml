@using X.PagedList;
@using X.PagedList.Mvc;
@model IPagedList<ERP.Models.RoleType>

    <div class="container">
        <div class="col-md-12 col-lg-12 commonPadding">
            <table class="table RoleTypeAll">
                <thead>
                    <tr class="gridheader">
                        <th>Role Type</th>
                        @*
                        <th>View</th>*@
                        <th>Edit</th>
                        <th>Delete</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var RoleType in Model)
                    {
                    <tr class="gridrow">
                        <td class="gridrow">@RoleType.RoletypeName</td>
                        @*
                        <td class="gridrow "> <img src="~/Content/view.gif" alt="View" class="RoleTypeView pointer" data-url="@Url.Action(" _RoleTypeView", "RoleType" )" data-identity="@(RoleType.Identity)" /> </td>*@
                        <td class="gridrow "><img src="~/Content/edit.png" alt="Edit" class="RoleTypeEdit pointer" data-url="@Url.Action("_RoleTypeEdit", "RoleType" )" data-identity="@(RoleType.Identity)" /></td>
                        <td class="gridrow "><img src="~/Content/delete.png" alt="Delete" class="RoleTypeDelete pointer" data-url="@Url.Action("Delete", "RoleType" )" data-identity="@(RoleType.Identity)" /></td>
                    </tr>

                    }
                </tbody>
            </table>
        </div>
        <div class="col-md-12 col-lg-12 nopadding textright">
            <div class="col-md-6 col-lg-6">
                Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount


            </div>
            <div class="col-md-6 col-lg-6">
                @Html.PagedListPager(Model, page => Url.Action("Sorting", new { page, sortOrder = ViewBag.CurrentSort, createdDate = ViewBag.CreatedDate, searchString = ViewBag.SearchString }), PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(new AjaxOptions() { InsertionMode = InsertionMode.Replace, HttpMethod = "GET", UpdateTargetId = "resultView" }))

            </div>
        </div>
    </div>

